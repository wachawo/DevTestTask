Тестовое задание:

При помощи скрипта сгенерируйте CSV-файл с данными об обработке обращений сотрудниками компании.
./main.py -n 1000000

В файле присутствуют следующие поля:

* CALLTIME — дата и время обращения
* AGENT — имя сотрудника
* CAMPAIGN — проект
* STATUS — статус обращения, SALE и CCSALE — успешные продажи, остальные статусы — неуспешные
* AMOUNT — сумма продажи

Необходимо разработать скрипт, который классифицирует сотрудников по производительности в разрезе каждого рабочего дня.
Скрипт должен быть способен обрабатывать файлы объёмом ~500 миллионов строк на сервере с 8 ГБ ОЗУ.
Язык программирования и используемые библиотеки — на ваше усмотрение.
Под производительностью подразумевается:
Сумма и количество успешных продаж в расчёте на час его работы.

1. Необходимо вычислить среднюю производительность проектов за каждый день.
2. Необходимо определить лучших сотрудников по производительности по каждому проекту за каждый день.
3. Необходимо определить 20% сотрудников по всем проектам с наименьшей производительностью за каждый день.

Дополнительные требования:

* Учитывайте только успешные обращения (например, STATUS в ['SALE', 'CCSALE']) при расчёте производительности.
* Время работы сотрудника считается с первого обращения до последнего в течение дня.
* Результат должен быть оформлен в виде ссылки на публичный Git-репозиторий.

CALLTIME AGENT CAMPAIGN STATUS AMOUNT
2025-05-12 19:25:09  agent0175      3000     DNC
2025-05-12 15:44:55  agent0514      5000    BUSY
2025-05-12 10:14:16  agent0915      2000    BUSY
2025-05-12 20:41:15  agent0591      2000      NI
2025-05-12 18:20:27  agent0931      2000    SALE     20
         ...        ...       ...     ...    ...    ....
2025-05-16 12:06:43  agent0095      1000     DNC
2025-05-16 16:01:02  agent0941      5000  CCSALE     60
2025-05-16 10:27:45  agent0735      9000  CCSALE     50
2025-05-16 19:53:15  agent0545      2000     DNC
2025-05-16 20:50:38  agent0257      2000     DNC
[1000000 rows x 5 columns]




